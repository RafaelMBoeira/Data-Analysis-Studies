--List all customers located in Germany.

SELECT *
FROM Customers AS cst
WHERE cst.Country = 'Germany';

--Find the top 5 most expensive products by unit price.

SELECT TOP 5 *
FROM Products AS pd
ORDER BY pd.UnitPrice DESC;

--Display the full name of each employee along with the name of their manager.

SELECT 
	CONCAT(emp_a.FirstName, ' ',emp_a.LastName) AS Employee,
	CONCAT(emp_b.FirstName, ' ', emp_b.LastName) AS Manager
FROM Employees AS emp_a
JOIN Employees AS emp_b
	ON emp_b.EmployeeID = emp_a.ReportsTo;

--List all orders placed in 1997, including the order ID, order date, and customer company name.

SELECT 
	ord.OrderID,
	ord.OrderDate,
	cst.CompanyName
FROM Orders AS ord
JOIN Customers AS cst
	ON ord.CustomerID = cst.CustomerID
WHERE YEAR(ord.OrderDate) = 1997;

--Find the total number of orders each customer has placed.

SELECT
	ord.CustomerID,
	cst.CompanyName,
	COUNT(ord.CustomerID) AS cst_count
FROM Orders AS ord
JOIN Customers AS cst
	ON ord.CustomerID = cst.CustomerID
GROUP BY ord.CustomerID, cst.CompanyName
ORDER BY cst_count DESC;

--Show the average order value for each customer.

SELECT 
	order_totals.CustomerID,
	cst.CompanyName,
	AVG(odt.Quantity * odt.UnitPrice * (1 - odt.Discount)) AS avg_order_value
FROM (
    SELECT
        ord.OrderID,
        ord.CustomerID,
        SUM(odt.Quantity * odt.UnitPrice * (1 - odt.Discount)) AS order_total
    FROM Orders AS ord
    JOIN [Order Details] AS odt 
		ON ord.OrderID = odt.OrderID
    GROUP BY ord.OrderID, ord.CustomerID
) AS order_totals
JOIN Customers AS cst
	ON order_totals.CustomerID = cst.CustomerID
JOIN [Order Details] AS odt
	ON order_totals.OrderID = odt.OrderID
GROUP BY order_totals.CustomerID, cst.CompanyName
ORDER BY avg_order_value DESC;

--Identify the product that has been ordered the most (by quantity across all orders).

SELECT TOP 1
	pdt.ProductID,
	pdt.ProductName,
	SUM(odt.Quantity) AS total_quantity
FROM [Order Details] AS odt
JOIN Products AS pdt
	ON odt.ProductID = pdt.ProductID
GROUP BY pdt.ProductID, pdt.ProductName
ORDER BY total_quantity DESC;

--List all employees who have not yet supervised anyone.

SELECT *
FROM Employees AS emp
WHERE emp.EmployeeID NOT IN (
	SELECT rep.ReportsTo
	FROM Employees as rep
	WHERE rep.ReportsTo IS NOT NULL
);

--Display the total sales amount (considering discounts) per country.

SELECT 
	cst.Country,
	SUM(odt.Quantity * odt.UnitPrice * (1 - odt.Discount)) AS total_sales
FROM Orders AS ord
JOIN Customers AS cst
	ON ord.CustomerID = cst.CustomerID
JOIN [Order Details] AS odt
	ON ord.OrderID = odt.OrderID
GROUP BY cst.Country
ORDER BY total_sales DESC;

--Show the top 3 customers who spent the most in total.

SELECT
	cst.CustomerID,
	cst.CompanyName,
	SUM(odt.Quantity * odt.UnitPrice * (1 - odt.Discount)) AS total_spent
FROM Orders AS ord
JOIN [Order Details] AS odt
	ON ord.OrderID = odt.OrderID
JOIN Customers AS cst
	ON ord.CustomerID = cst.CustomerID
GROUP BY cst.CustomerID, cst.CompanyName
ORDER BY total_spent DESC;

--Find the names of all suppliers who provide products in the “Beverages” category.

SELECT 
	sup.CompanyName AS Supplier,
	pdt.ProductName AS [Product Name]
FROM Products as pdt
JOIN Suppliers AS sup
	ON pdt.SupplierID = sup.SupplierID
JOIN Categories AS cat
	ON pdt.CategoryID = cat.CategoryID
WHERE cat.CategoryName = 'Beverages';

--List all products that are currently not discontinued and are out of stock.

SELECT * 
FROM Products AS pdt
WHERE pdt.UnitsInStock = 0 AND pdt.Discontinued = 0

--Find the month in which the most orders were placed, along with the count.

SELECT 
	YEAR(ord.OrderDate) AS year_order,
	MONTH(ord.OrderDate) AS month_order,
	COUNT(ord.OrderID) AS count_order
FROM Orders AS ord
GROUP BY MONTH(ord.OrderDate), YEAR(ord.OrderDate) 
ORDER BY count_order DESC;

--Calculate the total revenue generated by each product category.

SELECT 
	cat.CategoryName,
	ROUND(SUM(odt.Quantity * odt.UnitPrice * (1 - odt.Discount)), 2) AS total_revenue
FROM [Order Details] AS odt
JOIN Products AS pdt
	ON odt.ProductID = pdt.ProductID
JOIN Categories AS cat
	ON pdt.CategoryID = cat.CategoryID
GROUP BY cat.CategoryName
ORDER BY total_revenue DESC;

--Show a list of employees along with the number of orders they have handled.

SELECT
	emp.EmployeeID,
	CONCAT(emp.FirstName, ' ', emp.LastName) AS 'Employee Name',
	COUNT(ord.OrderID) AS 'Orders'
FROM Orders AS ord
JOIN Employees AS emp
	ON ord.EmployeeID = emp.EmployeeID
GROUP BY emp.EmployeeID, CONCAT(emp.FirstName, ' ', emp.LastName)
ORDER BY 'Orders' DESC;

--List customers who have not placed any orders.

SELECT
	cst.CustomerID,
	cst.CompanyName
FROM Customers AS cst
WHERE cst.CustomerID NOT IN (
	SELECT
		ord.CustomerID
	FROM Orders AS ord
	WHERE ord.EmployeeID IS NOT NULL
);

--Identify the products that were never ordered.

SELECT
	pdt.ProductID,
	pdt.ProductName
FROM Products AS pdt
WHERE pdt.ProductID NOT IN (
	SELECT 
		odt.ProductID
	FROM [Order Details] AS odt
	WHERE odt.ProductID IS NOT NULL
);

SELECT
    pdt.ProductID,
    pdt.ProductName
FROM Products AS pdt
LEFT JOIN [Order Details] AS odt
    ON pdt.ProductID = odt.ProductID
WHERE odt.ProductID IS NULL;

--List all orders that include more than 3 different products.

SELECT 
	odt.OrderID,
	COUNT(DISTINCT odt.ProductID) AS product_count
FROM Orders AS ord
JOIN [Order Details] AS odt
	ON ord.OrderID = odt.OrderID
GROUP BY odt.OrderID
HAVING COUNT(odt.OrderID) > 3;

--Find the country with the highest number of customers.

SELECT 
	cst.Country,
	COUNT(cst.Country) AS country_count
FROM Customers AS cst
GROUP BY cst.Country
ORDER BY COUNT(cst.Country) DESC;